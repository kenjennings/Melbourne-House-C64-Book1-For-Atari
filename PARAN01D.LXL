100 Rem 0 BACKGROUND=1
105 Rem N/A. 
110 Rem "BACKGROUND" isn't a C64 BASIC command.
115 Rem A variable named "BACKGROUND" is never referenced.
120 Rem 5 POKE55,255:POKE56,31
125 Rem N/A.
130 Rem This changes C64 end of BASIC/start of strings to reserve memory for graphics.
135 Rem Atari OS/Atari BASIC GRAPHICS command will reserve space.
140 Graphics 8+16:Rem The +16 eliminates text window.
145 Color 1:Rem And set the pixel drawing color.
150 Rem 6 DIMP(7):FORI=0TO7:P(I)=2^(7-I):NEXT
155 Rem N/A
160 Rem Atari OS/Atari BASIC has pixel plotting support built-in.
165 Rem 10 V=53248:POKEV+32,0:POKEV+33,0
170 Rem Border color and Background color.
175 Setcolor 4,0,0:Rem Border black.
180 Setcolor 2,0,15:Rem Background white
185 Rem OR it could be done unfriendlier like POKE 712,0:POKE 710,15
190 Rem Note that Atari doesn't have color map.  The drawn pixel 
195 Rem color is set by color register.  Here, set it to black:
200 Setcolor 1,0,0
205 Rem 30 POKEV+24,PEEK(V+24)OR8
210 Rem 40 POKEV+17,PEEK(V+17)OR32
215 Rem N/A.
220 Rem Setup registers for graphics display.
225 Rem Already done on the Atari by the GRAPHICS command.
230 Rem 50 FORI=1024TO2024:POKEI,BA:NEXT
235 Rem 60 FORI=8192TO8192+8*1024:POKEI,0:NEXT
240 Rem N/A.
245 Rem Clearing the screen. (Is BA assigned a value?)
250 Rem Already done on the Atari by the GRAPHICS command.
255 Rem 100 X=79:Y=49:DX=INT(RND(1)*3-1):DY=INT(RND(1)*3-1):IFDX=0ANDDY=0THEN100
260 Rem Initialize Delta variables. Redo if they both end up 0.
265 X=79:Y=49:Dx=Int(Rnd(0)*3-1):Dy=Int(Rnd(0)*3-1):If Dx=0 And Dy=0 Then Goto 265
270 Rem 105 Y1=Y:X1=X:GOSUB1000:X1=319-X:GOSUB1000:Y1=199-Y:GOSUB1000:X1=X:GOSUB1000
275 Rem Plotting pixels.  
280 Rem No subroutine needed on Atari.
285 Rem One difference is Atari default screen is 192 scan lines, not 200.
290 Rem That is a software limit imposed by OS, not a video hardware limit.
295 Plot X,Y:Plot 319-X,Y:Plot 319-X,191-Y:Plot X,191-Y
300 Rem 107 Y1=Y*2:X1=X*2:GOSUB1000:Y1=199-Y1:X1=319-X1:GOSUB1000
305 Rem More math and more plotting calls.
310 Y1=Y*2:X1=X*2:Plot X1,Y1:Y1=191-Y1:X1=319-X1:Plot X1,Y1
315 Rem 110 X=X+DX:Y=Y+DY:IFX<0ORX>159THENDX=-DX:GOTO110
320 Rem Increment deltas and fix horizontal boundary collision.
325 X=X+Dx:Y=Y+Dy:If X<0 Or X>159 Then Dx=-Dx:Goto 325
330 Rem 115 IFY<0ORY>99THENDY=-DY:GOTO110
335 Rem Fix vertical boundary collision 
340 If Y<0 Or Y>95 Then Dy=-Dy:Goto 325
345 Rem 120 IFRND(1)>.9THENDX=INT(RND(1)*3-1)
350 Rem X Random direction change.
355 If Rnd(0)>0.9 Then Dx=Int(Rnd(0)*3-1)
360 Rem 130 IFRND(1)>.9THENDY=INT(RND(1)*3-1)
365 Rem Y Random direction change.
370 If Rnd(0)>0.9 Then Dy=Int(Rnd(0)*3-1)
375 Rem 135 IFDX<>0ORDY<>0THEN105
380 Rem If Deltas are non-zero, then go plot again.
385 If Dx<>0 Or Dy<>0 Then Goto 295
390 Rem 140 DX=INT(RND(1)*3-1):DY=INT(RND(1)*3-1):IFDX=0ANDDY=0THEN140
395 Rem They were 0, so try to update them again.  It has to work eventually.
400 Dx=Int(Rnd(0)*3-1):Dy=Int(Rnd(0)*3-1):If Dx=0 And Dy=0 Then Goto 400
405 Rem 150 GOTO105
410 Rem Loop back to plot next group of points.
415 Goto 295
420 Rem 1000 YA=INT(Y1/8):YB=Y1-YA*8:XA=INT(X1/8):XB=X1-XA*8
425 Rem 1005 P=8*1024+YA*320+XA*8+YB:XC=P(XB)
430 Rem 1010 POKEP,PEEK(P)ORXC:RETURN
435 Rem N/A all of that.
440 Rem Atari OS/Atari BASIC has pixel plotting support built-in.
